name: "[CI]master push"
on:
  push:
    paths-ignore:
      - '.github/**'
    branches:
      - master

  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.job1.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: calculate current date
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "::set-env name=TIME::$(date +'%Y%m%d.%H%M%S')"
      - name: calculate_version
        id: job1
        run: |
          echo "::set-output name=VERSION::$(cat src/VERSION | cut -c 2-).${{ env.TIME }}"
  docker:
    if: github.repository_owner == 'spaceone-dev'
    needs: versioning
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.versioning.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: set some env variable
        run: |
          echo "::set-env name=SERVICE::$(echo ${{ github.repository }} | cut -c 14-)"
          echo "::set-env name=ECR_REPO::${{ secrets.AWS_ROOT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/spaceone/console"
      - name: build "build image"/image & push to pyengine
        run: |
          mv Dockerfile Dockerfile2
          mv build_Dockerfile Dockerfile
          docker pull pyengine/build:console
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          \docker build -t pyengine/build:console -c 2048 --cache-from pyengine/build:console .
          docker push pyengine/build:console
          rm Dockerfile
          mv Dockerfile2 Dockerfile
          \docker build -t pyengine/console:latest -t pyengine/console:${{ env.VERSION }} -t ${{ env.ECR_REPO }}:latest -t ${{ env.ECR_REPO }}:${{ env.VERSION }} -c 2048 .
          docker push pyengine/console
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: upload the docker image on ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ROOT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com
          docker push ${{ env.ECR_REPO }}
          
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}